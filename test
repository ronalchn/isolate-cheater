#!/usr/bin/env bash

cd `dirname $0`

indent="s/^/  /g"
indent2="s/^/    /g"
indent3="s/^/      /g"

echo 'Make cheater programs...'
make | sed "$indent"
mkdir tmp -p

boxdir=`./bin/isolate --init`

echo 'Test metafile-writer...'
cp bin/metafile-writer $boxdir/box

# Isolated process should not be able to write to metafile
metafile=tmp/metafile
echo 'With metafile directed at non-existent file location...' | sed "$indent"
rm -rf $metafile
testcase="./bin/isolate -M$metafile --run -- ./metafile-writer"
echo $ $testcase "2> /dev/null" | sed "$indent2"
$testcase 2> /dev/null | sed "$indent3"
echo $ cat $metafile | sed "$indent2"
cat $metafile | sed "$indent3"

# Isolated process should not be able to write to metafile
metafile=tmp/metafile2
echo 'With metafile directed at existing file location...' | sed "$indent"
echo metafile2 > tmp/metafile2
testcase="./bin/isolate -M$metafile --run -- ./metafile-writer"
echo $ $testcase "2> /dev/null" | sed "$indent2"
$testcase 2> /dev/null | sed "$indent3"
echo $ cat $metafile | sed "$indent2"
cat $metafile | sed "$indent3"

# Isolated process is able to write to metafile through file descriptor 3 (bug in command, not in isolate)
metafile=tmp/metafile3
echo 'With metafile directed at file descriptor 3 (NOTE: metafile for this command is not protected)...' | sed "$indent"
testcase="./bin/isolate -M/dev/fd/3 --run -- ./metafile-writer"
echo $ $testcase "3> $metafile 2> /dev/null" | sed "$indent2"
$testcase 3> $metafile 2> /dev/null | sed "$indent3"
echo $ cat $metafile | sed "$indent2"
cat $metafile | sed "$indent3"

# Isolated process is able to write to metafile through file descriptor 4 (bug in command, not in isolate)
metafile=tmp/metafile4
echo 'With metafile directed at file descriptor 4 (NOTE: metafile for this command is not protected)...' | sed "$indent"
testcase="./bin/isolate -M/dev/fd/4 --run -- ./metafile-writer"
echo $ $testcase "4> $metafile 2> /dev/null" | sed "$indent2"
$testcase 4> $metafile 2> /dev/null | sed "$indent3"
echo $ cat $metafile | sed "$indent2"
cat $metafile | sed "$indent3"

# isolate should not overwrite metafile where the user is not otherwise permitted
sysfile=tmp/sensitive-system-file
echo 'Metafile directed at protected root file' | sed "$indent"
echo $ ls -l $sysfile | sed "$indent2"
ls -l $sysfile | sed "$indent3"
testcase="./bin/isolate -M$sysfile --run -- ./metafile-writer"
echo $ $testcase "2> /dev/null" | sed "$indent2"
$testcase 2> /dev/null | sed "$indent3"
echo $ cat $sysfile | sed "$indent2"
cat $sysfile | sed "$indent3"

echo 'Test system-cronjob-writer...'
cp bin/system-cronjob-writer $boxdir/box
# isolate should not write evil bash script to protected file
# in practice, it can overwrite an existing script to retain executable permissions
# this is an attempt at privilege escalation
sysfile=tmp/cron.daily/evil-bash-script
echo 'Metafile directed at cron.daily' | sed "$indent"
echo $ ls -l $sysfile | sed "$indent2"
ls -l $sysfile | sed "$indent3"
testcase="./bin/isolate -M$sysfile --run -- ./system-cronjob-writer $USER"
echo $ $testcase "2> /dev/null" | sed "$indent2"
$testcase 2> /dev/null | sed "$indent3"
echo $ cat $sysfile | sed "$indent2"
cat $sysfile | sed "$indent3"

./bin/isolate --cleanup



